# Chunk 1
library(ggplot2)
library(readr)
library(dplyr)
library(tidyr)
library(knitr)
library(kableExtra)
library(ggpubr)
library(viridis)
library(stringr)
library(purrr)
library(pwr)
# Chunk 2
#   Data Source
#   https://www.kaggle.com/code/yadrsv/eda-mobiles-dataset/input
pathBase = dirname(rstudioapi::getSourceEditorContext()$path)
celulares = read_csv(paste0(pathBase,"/Mobiles_Dataset_2025.csv"))
attach(celulares)
# Chunk 3
# The function:
#   Takes a text column with embedded numbers (like "12GB + 8GB" or "203g"),
#   Extracts the numbers it contains,
#   Keeps the highest value (although it can be modified to sum, etc.),
#   Renames the column with a new name
emprolijar_columnas = function(data, columna_original, nuevo_nombre) {
data %>%
rename(!!nuevo_nombre := all_of(columna_original)) %>%
mutate(!!nuevo_nombre := str_extract_all(.data[[nuevo_nombre]], "\\d+"), # Regex
!!nuevo_nombre := map_dbl(.data[[nuevo_nombre]], ~ max(as.numeric(.))))
}
# Chunk 4
celulares = emprolijar_columnas(celulares, "Mobile Weight", "MobileWeigth_g")
celulares = emprolijar_columnas(celulares, "RAM", "RAM_GB")
celulares = emprolijar_columnas(celulares, "Front Camera", "FrontCamera_MP")
celulares = emprolijar_columnas(celulares, "Back Camera", "BackCamera_MP")
celulares = emprolijar_columnas(celulares, "Battery Capacity", "BatteryCapacity_mAh")
celulares = emprolijar_columnas(celulares, "Screen Size", "ScreenSize_in")
celulares = emprolijar_columnas(celulares, "Launched Price (USA)", "LaunchedPriceUSA_USD")
# Chunk 5
delta = 100
sigma = 175
D = delta/sigma
significancia = 0.01
potencia_del_test = 0.99
tamanio_muestral = pwr.norm.test(d = D, sig.level = significancia,
power = potencia_del_test, alternative = "two.sided")
tamanio_muestral
# Chunk 6
cels_num  <- select_if(celulares, is.numeric)
resumen_cels = data.frame(
Media = sapply(cels_num, mean, na.rm = TRUE),
Mediana = sapply(cels_num, median, na.rm = TRUE),
Minimo = sapply(cels_num, min, na.rm = TRUE),
Maximo = sapply(cels_num, max, na.rm = TRUE),
SD = sapply(cels_num, sd, na.rm = TRUE))
resumen_cels = round(resumen_cels, digits = 3)
resumen_cels  %>%
kable(caption = "Summary for clean numeric columns of the Mobile Dataset", format = "html") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
# Chunk 7
cels_num %>%
map_df(~ {
q1 =  quantile(.x, 0.25, na.rm = TRUE)
q3 = quantile(.x, 0.75, na.rm = TRUE)
iqr_val =  q3 - q1
lim_inf =  q1 - 1.5 * iqr_val
lim_sup = q3 + 1.5 * iqr_val
.x < lim_inf | .x > lim_sup
}) -> outliers_df
outliers_count =  data.frame(nro_outliers = colSums(outliers_df == TRUE))
outliers_count %>%
kable(caption = "Numebr of outliers per column in the dataset", format = "html") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
# Chunk 8
matriz_corr = cor(cels_num)
matriz_corr = round(matriz_corr, 3 )
matriz_corr[upper.tri(matriz_corr, diag = TRUE)] = ""
data.frame(matriz_corr)  %>%
kable(caption = "Correlation matrix between dataset's variables", format = "html") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
# Chunk 9
a1 = ggplot(cels_num, aes(x = MobileWeigth_g)) +
geom_histogram(binwidth = 20, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "a) Mobile Weight", x = "Mobile Weight (g)", y = "Frequency") +
theme_minimal()
a2 = ggplot(cels_num, aes(x = LaunchedPriceUSA_USD)) +
geom_histogram(binwidth = 50, fill = "springgreen", color = "black", alpha = 0.7) +
labs(title = "b) Launched Price USA", x = "Launched Price USA (USD)", y = "Frequency") +
theme_minimal()
ggarrange(a1,a2, ncol=2, nrow=1)
# Chunk 10
b1 = ggplot(cels_num, aes(x = "", y = MobileWeigth_g)) +
geom_boxplot(fill = "blue", outlier.color = "red", outlier.shape = 16) +
labs(title = "a) Mobile Weigth",
y = "Weight (g)",
x = "") +
theme_minimal()
b2 = ggplot(cels_num, aes(x = "", y = LaunchedPriceUSA_USD))  +
geom_boxplot(fill = "springgreen", outlier.color = "red", outlier.shape = 16) +
labs(title = "b) Launched Price USA",
y = "Price (USD)",
x = "") +
theme_minimal()
ggarrange(b1,b2, ncol=2, nrow=1)
# Chunk 11
Q1 = quantile(celulares$LaunchedPriceUSA_USD, 0.25, na.rm = TRUE)
Q3 = quantile(celulares$LaunchedPriceUSA_USD, 0.75, na.rm = TRUE)
IQR_val = Q3 - Q1
lim_inf = Q1 - 1.5 * IQR_val
lim_sup = Q3 + 1.5 * IQR_val
celulares  = celulares %>% filter(LaunchedPriceUSA_USD >= lim_inf & LaunchedPriceUSA_USD <= lim_sup)
# Chunk 12
ggplot(celulares, aes(y = LaunchedPriceUSA_USD)) +
geom_boxplot(fill = "orange", outlier.color = "red4", outlier.shape=5) +
labs(title = "Launch price", y = "Launch price (USD)") +
theme_minimal() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title.x = element_blank())
# Chunk 13
cels_brand = celulares %>% select(`Company Name`, LaunchedPriceUSA_USD)
ggplot(cels_brand, aes(x = `Company Name`, y = LaunchedPriceUSA_USD)) +
geom_boxplot(fill = "lightblue", outlier.color = "red4") +
labs(title = "Launched price per cell brand",
x = "Brand", y = "Launch price (USD)") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Chunk 14
nro_Graphs = length(unique(celulares$`Company Name`))
nro_Graphs
# Note: Analysis by model is not performed because it would require generating 'nro_Graphs' plots, each of which would need to be broken down by model.
# Chunk 15
shapiro.test(celulares$RAM_GB)
shapiro.test(celulares$LaunchedPriceUSA_USD)
# Chunk 16
c1 = ggplot(celulares, aes(sample = RAM_GB)) +
stat_qq(color = "green", alpha = 0.6) +
stat_qq_line(color = "red") +
labs(title = "RAM (GB)",
x = "Theoretical quantiles", y = "Sampled quantiles") +
theme_minimal()
c2 =  ggplot(celulares, aes(sample = LaunchedPriceUSA_USD)) +
stat_qq(color = "darkblue", alpha = 0.6) +
stat_qq_line(color = "red") +
labs(title = "Launched Price (USD)",
x = "Theoretical quantiles", y = "Sampled quantiles") +
theme_minimal()
ggarrange(c1, c2, ncol=2, nrow=1)
# Chunk 17
ggplot(celulares, aes(x = LaunchedPriceUSA_USD, y = RAM_GB)) +
geom_point(color = "steelblue", size = 3, alpha = 0.7) +
labs(title = "Launched price vs RAM",
x = "Launched price in USA (USD)",
y = "RAM (GB)") +
theme_minimal()
# Chunk 18
cor.test(celulares$RAM_GB, celulares$LaunchedPriceUSA_USD, method = 'pearson')
# Chunk 19
cor.test(celulares$RAM_GB, celulares$LaunchedPriceUSA_USD, method = "spearman")
# Chunk 20
t.test(celulares$MobileWeigth_g , mu = 180 , alternative = "greater")
# Chunk 21
mediana_bateria <- median(celulares$BatteryCapacity_mAh, na.rm = TRUE)
celulares$HighBattery <- ifelse(celulares$BatteryCapacity_mAh >= mediana_bateria, "Alta", "Baja")
tabla <- table(celulares$HighBattery, celulares$`Company Name`)
# Chunk 22
tabla_conting = data.frame(tabla)
colnames(tabla_conting) <- c("Battery Capacity", "Brand", "Frequency")
tabla_conting   %>%
kable(caption = "Contingency table for Brand and Battery Capacity", format = "html") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
# Chunk 23
chisq.test(tabla)
# Chunk 24
ggplot(tabla_conting, aes(x = Marca, y = Frecuencia, fill = `Capacidad Bateria`)) +
geom_bar(stat = "identity", position = "fill") +
scale_y_continuous(labels = scales::percent_format()) +
scale_fill_manual(values = c("Alta" ="#FC4E07", "Baja" = "#E7B800")) +
labs(title = "Proportion of High Battery per Brand",
y = "Proportion",
x = "Brand",
fill = "Battery Capacity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
tabla_conting
